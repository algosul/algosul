name: Rust Format Check

on:
  pull_request:
    branches: [ release ]

permissions:
  contents: write

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: true

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt

      - name: Run cargo fmt
        run: |
          # First check if formatting is needed
          if ! cargo fmt --all -- --check; then
            # Format the code using custom config
            cargo fmt --all -- --config-path code-standards/rustfmt.toml
    
            # Configure git
            git config user.name "GitHub Actions"
            git config user.email "actions@github.com"
    
            # Add and commit changes
            git add .
            if git commit -m "style: apply cargo fmt [skip ci]"; then
              git push
              echo "Formatted code and pushed changes."
            else
              git status
              echo "No formatting changes to commit."
              exit 1
            fi
          else
            echo "Code is already formatted."
          fi
